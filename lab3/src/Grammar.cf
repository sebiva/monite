comment "#" ;

PProg.   Program ::= [LExp] ;

LLet.     LExp ::= "let" Lit "=" Wrap ;
LLetIn.   LExp ::= "let" Lit "=" Wrap "in" LExp ;
LLe.      LExp ::= Exp ;
separator LExp ";" ;

EComp.    Exp ::= "{" LExp ":" Lit "<-" Exp "}" ;
EList.    Exp ::= "[" [Cmd] "]" ;
EWraps.     Exp ::= [Wrap] ;
separator Exp ";" ;

WPar.     Wrap ::= "((" [Wrap] "))" ;
WCmd.    Wrap ::= Cmd ;
separator nonempty Wrap "" ;


CText.     Cmd4 ::= [Text] ;
CPipe.    Cmd3 ::= Cmd3 "|" Cmd4 ;
COut.     Cmd2 ::= Cmd2 ">" Lit ;
CIn.      Cmd1 ::= Cmd1 "<" Lit ;
coercions Cmd 4 ;
separator nonempty Cmd "," ;


TStr.   Text ::= String ;
TLit.   Text ::= Lit ;
separator nonempty Text "" ;

token Lit (char - ["\"\',()[]<>|{};:\t\n "] (char - ["\"\',()[]<>|{};:\t\n "])* ) ;
separator nonempty Lit "" ;
